@model IJustWatched.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="row">
  <div class="col-sm-3">
    <div class="card">
      <img class="card-img-top" src="@Model.User.PhotoUrl" style="width: 13em; height: 13em; object-fit: cover" alt="User photo">
      <div class="card-body">
        @if (Model.IsCurrentUserPage)
        {
          <form method="post" asp-controller="User" asp-action="UploadFile" enctype="multipart/form-data">
            <input name="uploadedFile" type="file" style="word-wrap: normal; width: 180px; overflow: -moz-scrollbars-horizontal" accept=".jpg, .jpeg, .png"/>
            <button type="submit" class="btn-sm mt-2 mb-2 btn-outline-dark">Change photo</button>
          </form>
          <hr/>
        }
        <h4 class="card-title">@Model.User.UserName</h4>
        <div class="row">
          <button type="button" class="btn btn-default" id="btnFollowers"></button>
          <button type="button" class="btn btn-default" id="btnFollowing"></button>
        </div>
        @if (Model.IsCurrentUserPage == false && User.Identity.IsAuthenticated)
        {
          <hr/>
          <a href="#" id="subscribe_btn" class="btn btn-outline-primary" style="outline: none">+ Subscribe</a>
        }
      </div>
    </div>
  </div>
  <div class="col-sm-9">
       @if (Model.Reviews.Count != 0)
        {
          <h3 style="text-align: center">Posts</h3>
            <div class="col-lg-auto col-md-10 mx-auto">
                @foreach (var post in Model.Reviews)
                {
                    <partial name="_ReviewListItem" for="@post"/>
                }

                <!-- Pager -->
                <div class="clearfix">
                    <a class="btn btn-primary float-right" href="#">Older Posts â†’</a>
                </div>
            </div>
        }
        else
        {
            <h4 style="text-align: center">There's no posts yet</h4>
        }
  </div>
</div>

<!-- Modal Followers -->
<div class="modal fade" id="modalFollowers" role="dialog">
  <div class="modal-dialog">
    
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Followers</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body" id="followersModalBody" style="overflow-y:auto">
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Following -->
  <div class="modal fade" id="modalFollowing" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Following</h4>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body" id="followingModalBody" style="overflow-y:auto">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

<script>
$(document).ready(function(){
  
  loadSubscriptions();
  initSubscriptions();
  
  $("#btnFollowers").click(function(){
    $("#modalFollowers").modal();
  });
  
  $("#btnFollowing").click ( function() {
    $("#modalFollowing").modal();   
  });
});

function changeSubsState() {
  let subs_button = $("#subscribe_btn");
  if(subs_button.hasClass("btn btn-outline-primary")) {
    subs_button.removeClass("btn btn-outline-primary");
    subs_button.addClass("btn btn-primary");
    subs_button.text("Unsubscribe");
  } else {
    subs_button.removeClass("btn btn-primary");
    subs_button.addClass("btn btn-outline-primary");
    subs_button.text("+ Subscribe");
  }
}

function loadSubscriptions() {
  $.ajax(`/api/subscriptions/@Model.User.Id`).done((response) => {
    let data = JSON.parse(response);
    let followersCount = data.followers.length;
    let followingCount = data.following.length;
    
    let followerModalBody = $("#followersModalBody");
    followerModalBody.empty();
    let followingModalBody = $("#followingModalBody");
    followingModalBody.empty();
    
    $("#btnFollowers").text(followersCount + " followers");
    $("#btnFollowing").text(followingCount + " following");
    if (followersCount === 0) {
      followerModalBody.append("<p>List is empty</p>");
    } else {
      data.followers.forEach(follower => {
         followerModalBody.append(
                 `
             <div class="media mb-3">
               <img class="d-flex mr-3 rounded-circle" src="${follower.PhotoUrl}" alt="" style="width: 2em; height: 2em; object-fit: cover">
               <div class="media-body">
                 <a href="/user/${follower.Id}" style="color: black">
                   ${follower.UserName}
                 </a>
               </div>
             </div>
             `
         )
     });
    }
    
    if (followingCount === 0) {
      followerModalBody.append("<p>List is empty</p>");
    } else {
      data.following.forEach(following => {
         followingModalBody.append(
                 `
             <div class="media mb-3">
               <img class="d-flex mr-3 rounded-circle" src="${following.PhotoUrl}" alt="" style="width: 2em; height: 2em; object-fit: cover">
               <div class="media-body">
                 <a href="/user/${following.Id}" style="color: black">
                   ${following.UserName}
                 </a>
               </div>
             </div>
             `
         )
     });
    }
  }) 
}

function initSubscriptions() {
  $("#subscribe_btn").click(function(){
    loadSubscriptions();
    changeSubsState();
  })
}
</script>