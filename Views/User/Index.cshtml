@model IJustWatched.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="row">
  <div class="col-sm-3">
    <div class="card">
      <img class="card-img-top" src="@Model.User.PhotoUrl" style="width: 13em; height: 13em; object-fit: cover" alt="User photo">
      <div class="card-body">
        @if (Model.IsCurrentUserPage)
        {
          <form method="post" asp-controller="User" asp-action="UploadFile" enctype="multipart/form-data">
            <input name="uploadedFile" type="file" style="word-wrap: normal; width: 180px; overflow: -moz-scrollbars-horizontal" accept=".jpg, .jpeg, .png"/>
            <button type="submit" class="btn-sm mt-2 mb-2 btn-outline-dark">Change photo</button>
          </form>
          <hr/>
        }
        <h4 class="card-title">@Model.User.UserName</h4>
        <div class="row">
          <button type="button" class="btn btn-default" id="btnFollowers"></button>
          <button type="button" class="btn btn-default" id="btnFollowing"></button>
        </div>
        @if (Model.IsCurrentUserPage == false && User.Identity.IsAuthenticated)
        {
          <hr/>
          @if (Model.IsSubscription)
          {
            <button id="subscribe_btn" class="btn btn-primary" style="outline: none">Unsubscribe</button>
          }
          else
          {
            <button id="subscribe_btn" class="btn btn-outline-primary" style="outline: none">+ Subscribe</button>
          }
        }
      </div>
    </div>
  </div>
  <div class="col-sm-9">
       @if (Model.Reviews.Count != 0)
        {
          <h3 style="text-align: center">Posts</h3>
          <div class="col-lg-auto col-md-10 mx-auto">
            <div id="postsDiv">
            </div>

            <!-- Pager -->
            <div class="clearfix">
              <button id="backBtn" class="btn btn-primary float-left">← Back</button>
              <button id="nextBtn" class="btn btn-primary float-right">Next →</button>
            </div>
          </div>
        }
        else
        {
            <h4 style="text-align: center">There's no posts yet</h4>
        }
  </div>
</div>

<!-- Modal Followers -->
<div class="modal fade" id="modalFollowers" role="dialog">
  <div class="modal-dialog">
    
    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title">Followers</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>
      <div class="modal-body" id="followersModalBody" style="overflow-y:auto">
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal Following -->
  <div class="modal fade" id="modalFollowing" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <h4 class="modal-title">Following</h4>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <div class="modal-body" id="followingModalBody" style="overflow-y:auto">
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

<script>

var pageNumber = 1;

$(document).ready(function(){
  
  loadSubscriptions();
  init();
  loadPosts();
  
  $("#btnFollowers").click(function(){
    $("#modalFollowers").modal();
  });
  
  $("#btnFollowing").click ( function() {
    $("#modalFollowing").modal();   
  });
});

function changeSubsState() {
  let subs_button = $("#subscribe_btn");
  if(subs_button.hasClass("btn btn-outline-primary")) {
    subs_button.removeClass("btn btn-outline-primary");
    subs_button.addClass("btn btn-primary");
    subs_button.text("Unsubscribe");
  } else {
    subs_button.removeClass("btn btn-primary");
    subs_button.addClass("btn btn-outline-primary");
    subs_button.text("+ Subscribe");
  }
}

function loadSubscriptions() {
  $.ajax(`/api/subscriptions/@Model.User.Id`).done(response => {
    let data = JSON.parse(response);
    let followersCount = data.followers.length;
    let followingCount = data.following.length;
    
    let followerModalBody = $("#followersModalBody");
    followerModalBody.empty();
    let followingModalBody = $("#followingModalBody");
    followingModalBody.empty();
    
    $("#btnFollowers").text(followersCount + " followers");
    $("#btnFollowing").text(followingCount + " following");
    if (followersCount === 0) {
      followerModalBody.append("<p>List is empty</p>");
    } else {
      data.followers.forEach(follower => {
         followerModalBody.append(
                 `
             <div class="media mb-3">
               <img class="d-flex mr-3 rounded-circle" src="${follower.PhotoUrl}" alt="" style="width: 2em; height: 2em; object-fit: cover">
               <div class="media-body">
                 <a href="/user/${follower.Id}" style="color: black">
                   ${follower.UserName}
                 </a>
               </div>
             </div>
             `
         )
     });
    }
    
    if (followingCount === 0) {
      followingModalBody.append("<p>List is empty</p>");
    } else {
      data.following.forEach(following => {
         followingModalBody.append(
                 `
             <div class="media mb-3">
               <img class="d-flex mr-3 rounded-circle" src="${following.PhotoUrl}" alt="" style="width: 2em; height: 2em; object-fit: cover">
               <div class="media-body">
                 <a href="/user/${following.Id}" style="color: black">
                   ${following.UserName}
                 </a>
               </div>
             </div>
             `
         )
     });
    }
  }) 
}

function subscribe() {
  $.ajax(`/subscribe/@Model.User.Id`).done(function() {
    loadSubscriptions();
    changeSubsState();
  })
}

function unsubscribe() {
  $.ajax(`/unsubscribe/@Model.User.Id`).done(function() {
    loadSubscriptions();
    changeSubsState();
  })
}

function loadPosts() {
  $.ajax(`/api/reviews/@Model.User.Id/${pageNumber}`).done(response => {
      let data = JSON.parse(response);
      let postsDiv = $("#postsDiv");
      if (data.isNextBtn === true) 
          $("#nextBtn").show();
      else
          $("#nextBtn").hide();
      if (data.isBackBtn === true) 
          $("#backBtn").show();
      else
          $("#backBtn").hide();
      
      pageNumber = data.currentPage;
      
      postsDiv.empty();
      if (data.pageReviews.length === 0) {
        postsDiv.append(`<p>There's no posts yet</p>`);
      } else {
        data.pageReviews.forEach(review => {
          postsDiv.append(`
            <div class="post-preview">
                <div style="line-height: 1.5em; max-height: 3em; overflow: hidden">
                    <h4>
                        <a href="/review/${review.id}" style="color: black">
                            ${review.title}
                        </a>
                    </h4>
                </div>
                <p class="post-meta">Posted by
                    <a href="user/${review.authorId}">
                        ${review.authorUserName}
                    </a>
                    ${new Date(review.date).toLocaleDateString()} on 
                    <a href="/film/${review.filmId}">
                        ${review.filmTitle}
                    </a>
                </p>
            </div>
            <hr>
          `)
        })
      }
    })
}

function init() {
  $("#subscribe_btn").click(function(){
    if(subButton.hasClass("btn btn-outline-primary")) {
      subscribe()
    } else {
      unsubscribe()
    }
  });
  
  $("#nextBtn").click(function() {
    pageNumber++;
    loadPosts();
  });
  
  $("#backBtn").click(function() {
    pageNumber--;
    loadPosts();
  });
}
</script>