@using Microsoft.AspNetCore.Http
@model IJustWatched.Models.Review

@{
    ViewBag.Title = "I Just Watched";
    Layout = "_Layout";
}

<div class="col-lg-auto" style="align-items:center">

        <!-- Title -->
        <h1 class="mt-4">@Model.ReviewTitle</h1>

        <!-- Author -->
        <p class="lead">
          by
          <a asp-controller="User" asp-action="Index" asp-route-userId="@Model.Author.Id">
              @Model.Author.UserName
          </a>
          on <a asp-controller="Film" asp-action="Index" asp-route-filmId="@Model.ReviewFilm.Id">
              @Model.ReviewFilm.Title
          </a>
        </p>

        <hr>

        <!-- Date/Time -->
        <p>Posted on @Model.CreationDateTime.ToString("HH:mm dd/MM/yyyy")</p>

        <hr>
        
        @await Component.InvokeAsync("Tags", new { reviewId = Model.Id })

        <!-- Post Content -->
        <markdown>@Model.Content</markdown>

        <hr>

        @if (User.Identity.IsAuthenticated)
        {
            <!-- Comments Form -->
            <div class="card my-4">
                <h5 class="card-header">Leave a Comment:</h5>
                <div class="card-body">
                    <div class="form-group">
                        <textarea id="commentContent" class="form-control" rows="3"></textarea>
                    </div>
                    <input id="sendButton" type="button" class="btn btn-primary" value="Submit"/>
                </div>
            </div>
        }

        @await Component.InvokeAsync("Comments", new { reviewId = Model.Id })
        
        <div id="recentComments">
        </div>
</div>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script>
var connection = new signalR.HubConnectionBuilder()                
                .withUrl("/comments")
                .configureLogging(signalR.LogLevel.Trace)
                .build();
connection.start();
connection.on("ReceiveComment", function (reviewId, userName, userId, photoUrl, content, date) {
    if (reviewId === @Model.Id) {
        document.getElementById("recentComments").innerHTML +=
            `
                <div class="media mb-4">
                    <img class="d-flex mr-3 rounded-circle" src="${photoUrl}" alt="" style="width: 3em; height: 3em; object-fit: cover">
                    <div class="media-body">
                        <h5 class="mt-0">
                            <a href="/user/${userId}" style="color: black">
                                ${userName}
                            </a>
                        </h5>
                        <p>${date}<p/>
                        <p>
                            ${content}
                        </p>
                    </div>
                </div>
            `;
    }
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    let commentContent = document.getElementById("commentContent");
    if (commentContent.value === "") {
        alert("Comment may not be empty")
    } else {
        var userName = `@User.Identity.Name`;
        var content = commentContent.value;
        commentContent.value = "";
        connection.invoke("SendComment", userName, content, @Model.Id).catch(function (err) {
            return console.error(err.toString());
        });
    }
});
</script>